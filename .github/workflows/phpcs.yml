name: PHP CodeSniffer

on:
  push:
    branches: [main]

jobs:
  phpcs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
      - name: Install dependencies
        run: composer install
      - name: Check coding standards
        id: phpcs
        run: ./vendor/bin/phpcs --report=json --standard=PSR2 --colors --encoding=utf-8 app

  phpcbf:
    needs: phpcs
    runs-on: ubuntu-latest
    if: ${{ failure() }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
      - name: Install dependencies
        run: composer install
      - name: Preview fixes
        run: ./vendor/bin/phpcbf --dry-run --standard=PSR2 --colors --encoding=utf-8 --ignore=*/vendor/* --ignore=*/tests/* --ignore=*/public/* --ignore=*/storage/* --ignore=*/database/* app
      - name: Apply fixes
        run: ./vendor/bin/phpcbf --report=json --standard=PSR2 --colors --encoding=utf-8 --ignore=*/vendor/* --ignore=*/tests/* --ignore=*/public/* --ignore=*/storage/* --ignore=*/database/* app

  create-issue:
    needs: [phpcs, phpcbf]
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Install dependencies
        run: npm install @actions/core @actions/github
      - name: Create issue if phpcbf modified files
        if: ${{ steps.phpcbf.outputs.exit_code == 0 }}
        run: |
          REPORT=$(cat ./report.txt)
          while read -r line; do
            file=$(echo "$line" | awk '{print $1}')
            line_number=$(echo "$line" | awk '{print $2}')
            message=$(echo "$line" | awk '{$1=$2=""; print $0}' | sed 's/^[ \t]*//;s/[ \t]*$//')
            issue_title="PHPCS Error: $message"
            issue_body="Error found in $file on line $line_number:\n\n$message"
            echo "Creating issue: $issue_title"
            gh issue create --title "$issue_title" --body "$issue_body" --assignee "${{ github.actor }}" --label PHPCS --project "My Project" --project-column "To Do"
          done <<< "$REPORT"

